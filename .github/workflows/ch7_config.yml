name: Packaging (chapter 7)

on:
  - push

jobs:
  format:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4.0.0
        with:
          python-version: "3.10"

      - name: Install tox
        run: python -m pip install tox

      - name: Run black
        run: tox -e format
        working-directory: "Chapter 7"

  lint:
    name: Lint code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4.0.0
        with:
          python-version: "3.10"

      - name: Install tox
        run: python -m pip install tox

      - name: Run lint
        run: tox -e lint
        working-directory: "Chapter 7"

  typecheck:
    name: Typecheck code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4.0.0
        with:
          python-version: "3.10"

      - name: Install tox
        run: python -m pip install tox

      - name: Run typecheck
        run: tox -e typecheck
        working-directory: "Chapter 7"


  test:
    name: Test multiple python versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python:
          - version: "3.10"
            toxenv: "python310"
          - version: "3.9"
            toxenv: "python39"
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4.0.0
        with:
          python-version: ${{ matrix.python.version }}

      - name: Install tox
        run: python -m pip install tox

      - name: Run pytest
        run: tox -e ${{ matrix.python.toxenv }}
        working-directory: "Chapter 7"


  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macOS-13]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4.0.0
        with:
          python-version: "3.10"

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.3.1

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheels
        working-directory: "Chapter 7"

      - uses: actions/upload-artifact@v3
        with:
          path: ./"Chapter 7"/wheels/*.whl # Update to match root of package


  build_source_dist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4.0.0
        with:
          python-version: "3.10"

      - name: Install build
        run: python -m pip install build

      - name: Run build
        run: python -m build --sdist
        working-directory: "Chapter 7"

      - uses: actions/upload-artifact@v3
        with:
          path: ./"Chapter 7"/*.tar.gz



  publish:
    name: Publish package
    if: startsWith(github.event.ref, 'refs/tags/v')
    needs:
      - format
      - lint
      - typecheck
      - test
      - build_source_dist
      - build_wheels
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: ./"Chapter 7"/dist # Update to match root of package

      - uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          repository-url: https://test.pypi.org/legacy/
          user: __token__
          password: ${{ secrets.PYPI }}
          packages_dir: ./"Chapter 7"/dist/ # You don't need this in your package